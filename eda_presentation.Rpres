Exploratory Data Analysis: Olfaction Prediction Data
========================================================
author: 
</br>Vidya Koesmahargyo 
</br>Kit McDonald
</br>Eden Feldman

10/11/18

Data Refresher
========================================================

- Olfaction data
  - Predict valence and intensity given the physical/molecular structure
  - High and low intensity
  - Valence and strength on 0-100 scale
- Molecular descriptors (~4800)
- Compounds (~470)


Data at First Glance
========================================================

```{r}

```

Data Cleaning
========================================================

```{r echo=FALSE}
library(dplyr)
library(tibble)
library(ggplot2)
library(ggfortify)
library(OpenImageR)
library(fastICA)
library(NMF)
molec_desc <- read.csv('molecular_descriptors.txt', header = T, sep = '\t')
# olfaction_data
molec_desc

# read in labels
labels <- read.delim("training_set.txt")

# str(labels)
colnames(labels)
```

Creating Factors for Valence and Intensity

```{r }
# Make factors
labels$VALENCE.PLEASANTNESS <- factor(labels$VALENCE.PLEASANTNESS)
levels(labels$VALENCE.PLEASANTNESS) <- list("Unpleasent" = c(0:33), "Neutral" = c(34:66), "Pleasant" = c(67:100))

labels$INTENSITY.STRENGTH <- factor(labels$INTENSITY.STRENGTH)
levels(labels$INTENSITY.STRENGTH) <- list("Low" = c(0:33), "Medium" = c(34:66), "High" = c(67:100))
```

=======================================================
Using only High intensity data (highest dilution)
```{r echo=FALSE}
# Subset
olfaction_data <- subset(labels, Intensity == "high ", select = c("Compound.Identifier", "VALENCE.PLEASANTNESS", "INTENSITY.STRENGTH"))
head(as.tibble(olfaction_data))
```

Principal Component Analysis
========================================================

```{r }
molec_desc <- na.omit(molec_desc) # take out NA rows
molec_desc_pca <- data.frame(molec_desc) # convert to df
dim(molec_desc_pca)
```

========================================================

Reduce features by variance
```{r echo=FALSE}
molec_desc_pca <- molec_desc_pca[ , apply(molec_desc_pca,2,var)!=0] # using only columns with variance > 0
identifiers <- molec_desc_pca[ , 1] # setting the CID column separately
dim(molec_desc_pca)
head(as.tibble(molec_desc_pca))
```

========================================================
PCA Plot

```{r echo=FALSE}
pca <- prcomp(molec_desc_pca, scale. = T) # scaling pca
autoplot(pca, main='PCA plot: Variance of first 2 Principle Components')
```

========================================================
Screeplot

```{r echo=FALSE}
screeplot(pca, 100, main='Screeplot of Olfaction data', type='l')
```

========================================================
Cumulative Screeplot

```{r echo=FALSE}
std_dev <- pca$sdev
pr_var <- std_dev^2
prop_varex <- pr_var/sum(pr_var)
plot(cumsum(prop_varex), type='b', main="Cumulative Sum Screeplot", xlab='Principle Component', ylab='Total Variance Proportion')
```

Merging the Dataframes
========================================================

```{r echo=FALSE}
molec_desc_pca <- data.frame(cbind(identifiers, molec_desc_pca))

#colnames(molec_desc_pca)[1] <- "CID" #  rename to CID

olfaction_data$CID <- olfaction_data$Compound.Identifier # rename to CID
olfaction_data <- data.frame(olfaction_data)
```

```{r echo=FALSE}
joined <- merge(olfaction_data, molec_desc_pca, by.x= "CID", by.y="identifiers")
dim(joined)
joined <- joined[, -2]
head(as.tibble(joined))

dim(joined)
```

Next Steps
========================================================



